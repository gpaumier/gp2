{"version":3,"sources":["common/_decoration.scss","_settings.scss","modules/_fonts.scss","common/_typography.scss","common/_layout.scss","custom/page_phd.scss","common/_split.scss"],"names":[],"mappings":"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","sourcesContent":[".framed,\n.framed-img {\n\n  margin-bottom: .5rem;\n\n  &> img {\n      border: 1px solid #A9A9A9;\n      margin-bottom: 0;\n  }\n}\n\n%graph-paper {\n  // most for use in .expert below, but also in a few other places (like the technical abstract and the citations on the Ph.D page) so let's make it reusable.\n\n  background: url('../images/Graph_paper_inch_green_pattern.svg');\n  border: 1px dashed #0B0;\n  padding: .4rem;\n  color: #050;\n  margin-bottom: 1.5rem;\n}\n\n.expert {\n  @extend %graph-paper;\n}\n\n\n// Previously for:\n// .article-list-featured hr, .project-list-featured hr\n\nhr {\n    background: url('../images/Memoria_sullo_scavo_della_Via_Appia_fregio_p_10.png')  no-repeat top center;\n    height: 122px;\n    width: 100%;\n    border:none !important;\n    margin-top: calc(3vh + 3vw);\n    margin-bottom: calc(3vh + 3vw);\n}\n\n.article-list hr {\n    background: url('../images/Paragraph_decoration.png')  no-repeat top center;\n    height: 30px;\n    border:none !important;\n}\n\n\n.article-list > hr:last-of-type,\n.project-list-featured > hr:last-of-type {\n    display: none;\n}\n\n//////////////////////////////////////////////////////////\n\n// Experiments with decoration\n\n%double-frame-inset {\n  outline: .4rem double white;\n  outline-offset: -1rem;\n}\n\n%subtle-shadow {\n  box-shadow: rgba(0,0,0,.4) 0 .3rem 1rem;\n}\n","@use 'sass:math';\n\n// base unit aka font size for <p>\n$base-unit: calc(1.2rem + .5vw);\n\n$primary-color: rgb(158, 0, 0);\n$body-font-color: #333;\n$breakpoint-large: 1024px;\n$breakpoint-medium: 750px;\n\n$phi: math.div(1 + math.sqrt(5), 2);\n$golden1: math.div(1, $phi);\n$golden2: math.div(1, math.pow($phi, 2));\n// $golden3: 1 / ( math.pow($phi, 3) );\n// $golden4: 1 / ( math.pow($phi, 4) );\n$main-content-max-width: 65ch;\n\nbody {\n  //background-color: #eee7d9;\n  //background-color: #fdf6e3;\n  background-color: #fafafa;\n}\n\n// For reference:\n// $breakpoints: (\n//   small: 0,\n//   medium: 640px,\n//   large: 1024px,\n//   xlarge: 1200px,\n//   xxlarge: 1440px,\n// ) !default;\n","$fonts-dir: \"/assets/fonts\";\n\n/**\n * Font-face mixin to simplify the following.\n */\n\n@mixin font-face ($family, $file-prefix, $weight: normal, $style: normal) {\n\t@font-face {\n\t\tfont-family: $family;\n\t\tsrc: url(\"#{$fonts-dir}/#{$file-prefix}.eot\");\n\t\tsrc: url(\"#{$fonts-dir}/#{$file-prefix}.eot?#iefix\") format(\"embedded-opentype\"),\n\t\t\turl(\"#{$fonts-dir}/#{$file-prefix}.woff\") format(\"woff\"),\n\t\t\turl(\"#{$fonts-dir}/#{$file-prefix}.woff2\") format(\"woff2\"),\n\t\t\turl(\"#{$fonts-dir}/#{$file-prefix}.svg##{$file-prefix}\") format(\"svg\"),\n\t\t\turl(\"#{$fonts-dir}/#{$file-prefix}.ttf\") format(\"truetype\");\n\t\tfont-weight: $weight;\n\t\tfont-style: $style;\n\t}\n}\n\n/**\n * Linux Libertine\n */\n\n@include font-face(\n\t'Linux Libertine Display Regular',\n\t'linux-libertine/LinLibertine_DR',\n\tnormal,\n\tnormal\n);\n\n@include font-face(\n\t'Linux Libertine Initials',\n\t'linux-libertine/LinLibertine_I',\n\tnormal,\n\tnormal\n);\n\n@include font-face(\n\t'Linux Libertine Mono',\n\t'linux-libertine/LinLibertine_M',\n\tnormal,\n\tnormal\n);\n\n@include font-face(\n\t'Linux Libertine Regular',\n\t'linux-libertine/LinLibertine_R',\n\tnormal,\n\tnormal\n);\n\n@include font-face(\n\t'Linux Libertine Regular Bold',\n\t'linux-libertine/LinLibertine_RB',\n\tbold,\n\tnormal\n);\n\n@include font-face(\n\t'Linux Libertine Regular Bold Italic',\n\t'linux-libertine/LinLibertine_RBI',\n\tbold,\n\titalic\n);\n\n@include font-face(\n\t'Linux Libertine Regular Italic',\n\t'linux-libertine/LinLibertine_RI',\n\tnormal,\n\titalic\n);\n\n@include font-face(\n\t'Linux Libertine Semibold',\n\t'linux-libertine/LinLibertine_RZ',\n\t600,\n\tnormal\n);\n\n@include font-face(\n\t'Linux Libertine Semibold Italic',\n\t'linux-libertine/LinLibertine_RZI',\n\t600,\n\titalic\n);\n\n$phenix-serif: 'Linux Libertine Regular', 'Baskerville', 'Georgia', serif;\n\n/**\n * Linux Biolinum\n */\n\n@include font-face(\n\t'Linux Biolinum Keyboard',\n\t'linux-biolinum/LinBiolinum_K',\n\tnormal,\n\tnormal\n);\n\n@include font-face(\n\t'Linux Biolinum Regular',\n\t'linux-biolinum/LinBiolinum_R',\n\tnormal,\n\tnormal\n);\n\n@include font-face(\n\t'Linux Biolinum Regular Bold',\n\t'linux-biolinum/LinBiolinum_RB',\n\tbold,\n\tnormal\n);\n\n@include font-face(\n\t'Linux Biolinum Regular Italic',\n\t'linux-biolinum/LinBiolinum_RI',\n\tnormal,\n\titalic\n);\n\n$phenix-sans: 'Linux Biolinum Regular', 'Futura', 'Verdana', sans-serif;\n\n/**\n * Latin Modern Monospace\n */\n\n@include font-face(\n\t'Latin Modern Monospace Regular',\n\t'latinmodern/mono/lmmono10-regular-webfont',\n\tnormal,\n\tnormal\n);\n\n@include font-face(\n\t'Latin Modern Monospace Italic',\n\t'latinmodern/mono/lmmono10-italic-webfont',\n\tnormal,\n\titalic\n);\n\n@include font-face(\n\t'Latin Modern Monospace Light Bold',\n\t'latinmodern/mono/lmmonolt10-bold-webfont',\n\tbold,\n\tnormal\n);\n\n@include font-face(\n\t'Latin Modern Monospace Light Bold Oblique',\n\t'latinmodern/mono/lmmonolt10-boldoblique-webfont',\n\tbold,\n\titalic\n);\n\n$phenix-monospace: 'Latin Modern Monospace Regular', 'Courier', monospace;\n\n/**\n * phenix Serif\n */\n\n%phenix-serif {\n    font-family: $phenix-serif;\n}\n\n%phenix-serif-bold {\n    font-family: 'Linux Libertine Regular Bold', 'Baskerville', 'Georgia', serif;\n    font-weight: bold;\n}\n\n%phenix-serif-italic {\n    font-family: 'Linux Libertine Regular Italic', 'Baskerville', 'Georgia', serif;\n    font-style: italic;\n}\n\n%phenix-serif-bolditalic {\n    font-family: 'Linux Libertine Regular Bold Italic', 'Baskerville', 'Georgia', serif;\n    font-weight: bold;\n    font-style: italic;\n}\n\n%phenix-serif-display {\n    font-family: 'Linux Libertine Display Regular', 'Baskerville', 'Georgia', serif;\n}\n\n%phenix-serif-semibold {\n    font-family: 'Linux Libertine Semibold', 'Baskerville', 'Georgia', serif;\n    //font-weight: 600;\n}\n\n%phenix-serif-semibold-italic {\n    font-family: 'Linux Libertine Semibold Italic', 'Baskerville', 'Georgia', serif;\n    font-weight: 600;\n    font-style: italic;\n}\n\n/**\n * phenix Sans\n */\n\n%phenix-sans {\n    font-family: $phenix-sans;\n}\n\n%phenix-sans-bold {\n    font-family: 'Linux Biolinum Regular Bold', 'Futura', 'Verdana', sans-serif;\n    font-weight: bold;\n}\n\n%phenix-sans-italic {\n    font-family: 'Linux Biolinum Regular Italic', 'Futura', 'Verdana', sans-serif;\n    font-style: italic;\n}\n\n/**\n * phenix Monospace\n */\n\n%phenix-monospace {\n    font-family: $phenix-monospace;\n}\n\n%phenix-monospace-italic {\n    font-family: 'Latin Modern Monospace Italic', 'Courier', monospace;\n    font-style: italic;\n}\n\n%phenix-monospace-bold {\n    font-family: 'Latin Modern Monospace Light Bold', 'Courier', monospace;\n    font-weight: bold;\n}\n\n%phenix-monospace-bolditalic {\n    font-family: 'Latin Modern Monospace Light Bold Oblique', 'Courier', monospace;\n    font-weight: bold;\n    font-style: italic;\n}\n","@use '../settings' as *;\n@use '../modules/fonts';\n\n/**\n* Define our fonts\n*/\n\nhtml {\n  font-size: 100%;\n}\n\nbody {\n  margin: 0;\n  padding: 0;\n  font-size: $base-unit;\n  line-height: $phi; // use the golden ratio here as well\n  @extend %phenix-serif;\n  color: $body-font-color;\n}\n\nh1 {\n  @extend %phenix-serif-bold;\n}\n\nh2,\nh3,\nh4,\n.stakes-header-text {\n  @extend %phenix-sans-bold;\n\n  em {\n    @extend %phenix-sans-italic;\n  }\n}\n\n// font sizes\n\np,\nli,\nol,\n#skip-to-content {\n  font-size: $base-unit;\n  // = calc(1.2rem + .5vw)\n}\n\n%smaller-font-size {\n  font-size: calc(1rem + .2vw);\n}\n\n%small-font-size {\n  font-size: calc(1rem + .4vw);\n}\n\nh1 {\n  font-size: calc(2.5rem + 2.5vw);\n}\n\nh2 {\n  font-size: calc(2rem + 1.2vw);\n}\n\n%hero-h2 {\n  font-size: calc(2rem + 2.5vw);\n}\n\n%larger-font-size {\n  font-size: calc(1.5rem + .65vw);\n}\n\nh3,\n.highlights p,\n%large-font-size {\n  font-size: calc(1.4rem + .6vw);\n}\n\n@mixin larger-font-size() {\n  // same as above but for use in media queries where we can't extend\n  font-size: calc(1.5rem + .65vw);\n}\n\n\nstrong {\n  @extend %phenix-serif-bold;\n}\n\nem,\n.admonition.note p {\n  @extend %phenix-serif-italic;\n}\n\nem strong,\nstrong em {\n  @extend %phenix-serif-bolditalic;\n}\n\npre {\n  @extend %phenix-monospace;\n\n  strong {\n    @extend %phenix-monospace-bold;\n  }\n\n  em {\n    @extend %phenix-monospace-italic;\n  }\n\n  em strong,\n  strong em {\n    @extend %phenix-monospace-bolditalic;\n  }\n}\n\n.expert,\n.expert p {\n\n  @extend %phenix-sans;\n  @extend %small-font-size;\n\n  strong {\n    @extend %phenix-sans-bold;\n  }\n\n  em {\n    @extend %phenix-sans-italic;\n  }\n\n}\n\nblockquote {\n  @extend %phenix-serif-italic;\n}\n\nfigcaption p,\n.caption,\n.legend, {\n  @extend %phenix-sans;\n  @extend %smaller-font-size;\n  line-height: 1.3;\n\n  em {\n    @extend %phenix-sans-italic;\n  }\n\n  strong {\n    @extend %phenix-sans-bold;\n  }\n}\n\nfigcaption, .caption {\n  color: #6a6a6a;\n\n  a {\n    color: #6a6a6a;\n\n    &:hover {\n      color: $primary-color;\n    }\n  }\n}\n\n\na {\n  text-decoration-line: underline;\n  text-decoration-style: solid;\n  color: $body-font-color;\n\n  &.privacy-policy {\n    text-decoration-line: none;\n  }\n\n}\n\n.footnote-reference {\n  text-decoration: none;\n  font-size: 80%;\n  // https://css-tricks.com/snippets/css/prevent-superscripts-and-subscripts-from-affecting-line-height/\n  vertical-align: baseline;\n  position: relative;\n  top: -0.4em;\n}\n\n\nh2,\nh3 {\n  text-align: center;\n}\n\n.highlights {\n  @extend %phenix-serif;\n  font-style: normal;\n  padding: 0;\n  border: none;\n\n  em {\n    @extend %phenix-serif-italic;\n    font-style: italic;\n  }\n}\n\np.continue-reading {\n  @extend %phenix-sans-bold;\n  text-align: right;\n  margin-top: .5rem;\n\n  a::after {\n    content: \"☞\";\n    display: inline-block;\n    margin-left: .3rem;\n  }\n}\n\n// Footnotes\n\n.footnote-reference,\n.fn-backref,\n.footnote p,\n.sidebar p {\n  @extend %smaller-font-size;\n  text-decoration: none;\n}\n\n.footnote-reference,\n.fn-backref {\n  text-decoration: none;\n}\n\n.fn-backref {\n  align-self: start;\n}\n\nsection:last-child, p:last-child {\n  margin-bottom: 0;\n}\n\n// Footer\n\nbody > footer {\n  @extend %phenix-sans;\n\n  button {\n    @extend %phenix-sans-bold;\n  }\n}\n","@use 'sass:math';\n@use '../settings' as *;\n@use 'typography';\n\n// Basics ///////////////////////////////////\n\nfigure {\n  margin-left: 0;\n  margin-right: 0;\n}\n\n//////////////////////////////////////////////////\n\n@mixin side-by-side-figures($column-gap: 0, $rows: 2) {\n\n  // A little utility to place two figures side by side in a grid, and have a (manual) caption spread underneath.\n  // If we have more than to opictures (e.g. two rows of two pictures and one row of caption), increase $rows to add more explicit rows so the explicit placement of the caption works.\n\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  column-gap: $column-gap;\n  grid-template-rows: repeat($rows, min-content);\n\n  // Override default img behavior in the golden grid:\n\n  img {\n    grid-column: auto;\n  }\n\n  p.caption {\n    grid-column: 1/3;\n    grid-row: -2/-1;\n    margin-top: .2rem;\n    margin-bottom: 1rem;\n  }\n}\n\n//////////////////////////////////////////////////\n\nheader {\n  margin-bottom: 3rem;\n}\n\n// Attribution lines in blockquotes should be flushed right\n\n.attribution {\n  text-align: right;\n}\n\n\n// Objects, videos need to be constrained to their parent.\n\nobject, video {\n  max-width: 100%;\n}\n\nsvg {\n  // TODO: avoid cropping; https://css-tricks.com/scale-svg/\n}\n\n// Footnotes\n\n.footnote {\n  display: grid;\n  grid-template-columns: min-content 1fr;\n  grid-column-gap: .5rem;\n\n  .label {\n    grid-column: 1/2;\n  }\n\n  > p {\n    grid-column: 2/3;\n  }\n}\n\n\n// Experiments with the golden ratio as basis for all layouts ///////////////////////////////////\n\n\n\n%golden-grid {\n  display: grid;\n  grid-template-columns:\n\n  // The left margin (larger) is in a golden relationship with the right margin (smaller). When added to the main-content, they're in a golden relationship with the smaller [side-content + right-margin] area, which enables us to have a full-width golden row as well.\n  [full-start full-golden-large-start left-margin-start] minmax(1rem, #{$golden1}fr)\n\n  // The main content is limited by its max width, and we split that zone into 4 equal columns for flexibility:\n  [left-margin-end full-content-start main-content-start] repeat(4, minmax(min-content, math.div($main-content-max-width, 4)))\n\n  // We don't have a column-gap in order to stay as close as possible to the golden proportions. We add a gutter here to separate the two content sections a bit, but we split it into two smaller gutters that are themselves in a golden relationship, so we can split the width exactly with full-golden-large and full-golden-small:\n  [main-content-end] calc(#{$golden1 * 1.2rem} + #{$golden1 * 2vw}) // slightly larger than $base-unit\n\n  [full-golden-large-end full-golden-small-start ] calc(#{$golden2 * 1.2rem} + #{$golden2 * 2vw}) // slightly larger than $base-unit\n\n  // The side content is defined by its golden relationship to the main content, and we split that zone into 3 equal columns for flexibility:\n  [side-content-start] repeat(3, minmax(min-content, math.div($golden1 * $main-content-max-width, 3)))\n\n  // The right margin (smaller) is in a golden relationship with the left margin (larger). When added to the side-content, they're in a golden relationship with the larger [left-margin + main content] area.\n  [side-content-end full-content-end right-margin-start] minmax(1rem, #{$golden2}fr)\n\n  [right-margin-end full-golden-small-end full-end];\n\n  // On small viewports, everything is stacked vertically, with the side margins:\n  > * {\n    grid-column: full-content;\n  }\n\n  // Except sections and other containers that need the full width because they use the same golden grid:\n  > section,\n  .entry-content,\n  //or just look silly if not centered:\n  hr {\n    grid-column: full;\n  }\n\n  // On small viewports, images in figures are stretched to the full viewport, but for that we need to flatten them so we can align its child elements on the grid. The figcaption keeps its margins though.\n\n  figure,\n  .figures {\n    display: contents;\n  }\n\n  img {\n    grid-column: full;\n  }\n\n  figcaption,\n  .caption {\n    grid-column: full-content;\n  }\n\n  // On larger viewports, we switch to our golden grid:\n\n  @media screen and (min-width: $breakpoint-medium) {\n    h2,\n    h3,\n    p,\n    blockquote,\n    ul,\n    ol,\n    // Let's put figures in the main-content unless explicitly in a sidebar. We keep <figure> and .figures elements flattened so we can arrange images and captions à la Tufte:\n    img,\n    // but sometimes we have special .figures that we still want to be in the main-content:\n    .figures,\n    //.expert content tends to be wordy and among figures so let's keep it in the main-content zone by default:\n    .expert,\n    // Override class to place elements that are traditionally in side-content in the main-content. We put it inside the golden-grid definition for specificity reasons.\n    // (We don't need the reverse class because we can use the sidebar directive for that.)\n    .main-content {\n      grid-column: main-content;\n    }\n\n    // Unless we have a full-content element:\n    .full-content {\n      img {\n        grid-column: full-content;\n      }\n\n      // When the image takes up the full-content width, let's put the caption in the side-content. We span two rows to avoid shifting content down in the main-content area. And we align the caption at the start so it's right underneath the image.\n      figcaption {\n        grid-row: span 2;\n        align-self: start;\n\n      }\n    }\n\n    // Place side elements in the sidebar:\n    .footnote,\n    .sidebar,\n    figcaption,\n    .caption,\n    .admonition {\n      grid-column: side-content;\n    }\n\n    // Have the option to unset those styles if they're giving us trouble\n    .unset-grid {\n      grid-column: unset;\n    }\n\n    // Align <figcaption>, .caption, and .footnote elements at the start for a Tufter look:\n    figcaption,\n    .caption,\n    .footnote,\n    .admonition {\n      align-self: end;\n    }\n\n    // Align other elements in the sidebar vertically for a more dynamic / organic flow:\n    .sidebar {\n      align-self: center;\n\n      // Unless we specifically don't want to\n      &.align-start {\n        align-self: start;\n      }\n\n      &.align-end {\n        align-self: end;\n      }\n    }\n  }\n}\n\n// Create classes for indicating on which row images should start in the golden grid\n\n@for $i from 1 through 10 {\n  .rowstart-#{$i} {\n    @media screen and (min-width: $breakpoint-medium) {\n      grid-row-start: #{$i};\n    }\n  }\n}\n\n// Create classes for spanning images across several rows in the golden grid\n\n@for $i from 1 through 10 {\n  .rowspan-#{$i} {\n    @media screen and (min-width: $breakpoint-medium) {\n      grid-row-end: span #{$i};\n    }\n  }\n}\n\n// Hero titles based on the golden grid\n\n%golden-section {\n  @extend %golden-grid;\n\n  // based on the split-layout hero titles\n\n\n  h2 {\n    grid-column: full;\n    // Use both halves because on narrower viewports we don't have space to add the first paragraph of text in here:\n    grid-row: 2/4;\n    align-self: center;\n    // Make sure this element shows above the image:\n    z-index: 10;\n    // add margins because we're using the full width of the viewport\n    margin-left: 1rem;\n    margin-right: 1rem;\n  }\n\n  > figure:first-of-type {\n    // This is the first picture in the section, i.e. the one we want to use as graphic spread.\n\n    img {\n      grid-column: full;\n      grid-row: 1/5;\n      z-index: 2;\n      height: 100%;\n      object-fit: cover;\n    }\n\n    figcaption {\n      grid-column: full;\n      grid-row: 3/4;\n      // add margins:\n      margin-left: .5rem;\n      margin-right: .5rem;\n    }\n  }\n\n  // box-shadows to simulate depth\n  &::before {\n    content: '';\n    grid-row: 1/3;\n    grid-column: full;\n    box-shadow: 0 0 2rem 0 #44000077;\n    z-index: 4;\n  }\n\n  @media screen and (min-width: $breakpoint-medium) {\n\n    h2 {\n      // We're still using the full width, but we need to say so explicitly because the golden grid puts this into the main-content area by default on wider viewscreens:\n      grid-column: full;\n      // For the rows, though, we now have space to pull in the first paragraph of text, so we limit the title to the top half of the hero spread:\n      grid-row: 2/3;\n      // and we align it at the bottom of the top half, for aesthetics:\n      align-self: end;\n    }\n\n    > figure:first-of-type figcaption {\n    justify-self: end;\n      // Since we have more space, we align this flushed right, but no longer than beyond the golden divide:\n      // TODO: uncomment that once we find a way to reserve the full-golden-large part of this rnow so text paragraphs don't go in there\n      //grid-column: full-golden-small;\n      // And we can get rid of the left-margin\n      //margin-left: 0;\n    }\n  }\n}\n\n%golden-section-hero-full {\n  @extend %golden-section;\n\n  grid-template-rows:\n  35vh                 // top half\n  35vh                 // bottom half\n  min-content          // figcaption\n  auto;                // remaining content of the section\n\n  h2 {\n    grid-column: full;\n    // Use both halves because on narrower viewports we don't have space to add the first paragraph of text in here:\n    grid-row: 1/3;\n    align-self: center;\n    // Make sure this element shows above the image:\n    z-index: 10;\n    // Use a light color for a dark background:\n    color: #f3f3f3;\n    // add margins because we're using the full width of the viewport\n    margin-left: 1rem;\n    margin-right: 1rem;\n    text-shadow: 0 0 1.5rem #000,-.5rem 0 1.5rem #000,0.5rem 0 1.5rem #000;\n  }\n\n  > figure:first-of-type {\n    // This is the first picture in the section, i.e. the one we want to use as graphic spread.\n\n    img {\n      grid-column: full;\n      grid-row: 1/3;\n      z-index: 2;\n      height: 100%;\n      object-fit: cover;\n      // Since we have a dark background with bright text, make the background darker by reducing its brightness:\n      filter: brightness(60%);\n    }\n  }\n\n  @media screen and (min-width: $breakpoint-medium) {\n\n    h2 {\n      // We're still using the full width, but we need to say so explicitly because the golden grid puts this into the main-content area by default on wider viewscreens:\n      grid-column: full;\n      // For the rows, though, we now have space to pull in the first paragraph of text, so we limit the title to the top half of the hero spread:\n      grid-row: 1/2;\n      // and we align it at the bottom of the top half, for aesthetics:\n      align-self: end;\n    }\n\n    > p:first-of-type {\n      // Like the title, this needs to be full width:\n      grid-column: full;\n      // We place it in the bottom half of the hero spread:\n      grid-row: 2/3;\n      align-self: center;\n      justify-self: center;\n      z-index: 10;\n      @include typography.larger-font-size();\n      color: #f3f3f3;\n      text-shadow: 0 0 1.5rem #000,-.5rem 0 1.5rem #000,0.5rem 0 1.5rem #000;\n      padding-left: $base-unit;\n      padding-right: $base-unit;\n      max-width: 80ch;\n    }\n  }\n}\n\n%golden-section-hero-golden {\n  @extend %golden-section;\n\n  grid-template-rows:\n  // total height of the graphic spread is 85% of the viewport's height\n  minmax(min-content, #{$golden1 * 85}vh)  // top half\n  minmax(min-content, #{$golden2 * 85}vh)  // bottom half\n  min-content                         // figcaption\n  auto;                               // remaining content\n\n  h2 {\n    grid-column: full;\n    // Use both halves because on narrower viewports we don't have space to add the first paragraph of text in here:\n    grid-row: 2/3;\n    align-self: center;\n    // Make sure this element shows above the image:\n    z-index: 10;\n    // Use a light color for a dark background:\n    display: block;\n\n    // add margins because we're using the full width of the viewport\n    margin-left: 1rem;\n    margin-right: 1rem;\n  }\n\n  > figure:first-of-type img {\n      grid-column: full;\n      grid-row: 1/3;\n      z-index: 2;\n      height: 100%;\n      object-fit: cover;\n    }\n\n  // background-color for the bottom area\n  &::after {\n    content: '';\n    grid-column: full;\n    grid-row: 2/3;\n    background-color: #ecececde;\n    z-index: 5;\n  }\n\n  @media screen and (min-width: $breakpoint-medium) {\n\n    // On wider viewports we want to pull the first paragraph of text in, but it takes more space than the h2 title, so we need to reverse the golden relationship between the hero area's two zones:\n    // We can also reduce the overall height a bit\n    grid-template-rows:\n    minmax(min-content, #{$golden2 * 70}vh)  // top half\n    minmax(min-content, #{$golden1 * 70}vh)  // bottom half\n    min-content                         // figcaption\n    auto;\n\n    // Left side:\n\n    > figure:first-of-type img {\n        grid-column: full-golden-large;\n        grid-row: 1/3;\n        z-index: 2;\n        height: 100%;\n        object-fit: cover;\n      }\n\n    // Right side:\n\n    // background-color for the right side\n    &::after {\n      grid-row: 1/3;\n      grid-column: full-golden-small;\n    }\n\n    h2 {\n      // We're restricting the title and text to the right side:\n      grid-column: full-golden-small;\n      // For the rows, though, we now have space to pull in the first paragraph of text, so we limit the title to the top half of the hero spread:\n      grid-row: 1/2;\n      // Align it to the bottom of the top area, to emphasize the golden separation\n      align-self: end;\n      margin-bottom: 0;\n\n      &::after {\n        content: \"\";\n        border-bottom: 1px solid $primary-color;\n        display: block;\n        //we want the width of this border to be in a golden relationship with the whitespace on either side of it\n        width: #{$golden2 * 100%};\n        margin-left: #{math.div($golden1, 2) * 100%};\n        //margin-bottom: calc(-2rem - 1.2vw); // = minus h2 font size\n        //margin-top: calc(-2rem - 1.2vw);\n      }\n    }\n\n    > p:first-of-type {\n      // Like the title, this needs to be full width:\n      grid-column: full-golden-small;\n      // We place it in the bottom half of the hero spread:\n      grid-row: 2/3;\n      // Align it to the top of the bottom area, to emphasize the golden separation\n      align-self: start;\n      justify-self: center;\n      z-index: 10;\n      padding-left: $base-unit;\n      padding-right: $base-unit;\n      max-width: 80ch;\n    }\n  }\n}\n\n// Site-wide layouts ///////////////////////////////////////////////////////////\n\nmain {\n  article,\n  section,\n  .entry-content {\n    @extend %golden-grid;\n  }\n}\n\nsection {\n  .hero-h2-golden > .entry-content > & {\n    @extend %golden-section-hero-golden;\n  }\n}\n\n\nfooter nav {\n  @extend %golden-grid;\n}\n","@use '../common/decoration';\n@use '../common/layout';\n@use '../common/split';\n\n\n/////////////////////////////////////////////////////////////\n\n#technical-abstract,\ndl {\n  @extend %graph-paper;\n}\n\n#technical-abstract {\n  padding: 1.5rem calc(1.5rem + 2vw);\n  border: 2px dotted #0B0;\n  margin-bottom: 3rem;\n}\n\n/////////////////////////////////////////////////////////////\n\n#kudos {\n  display: grid;\n  grid-template-columns: minmax(.5rem, 2vw) 1fr 4fr minmax(.5rem, 2vw);\n  grid-template-rows: minmax(.5rem, 10vh) 20vh min-content min-content;\n\n  figure {\n    grid-column: 1/6;\n    grid-row: 1/3;\n\n    img {\n      height: 100%;\n      width: 100%;\n      object-fit: cover;\n      object-position: 0 70%;\n      z-index: 25;\n      filter: brightness(50%);\n      transform: scaleX(-1);\n    }\n\n    figcaption{\n      text-align: right;\n    }\n\n  }\n\n  h2 {\n    grid-column: 3/4;\n    grid-row: 2/3;\n    align-self: center;\n    text-align: left;\n    margin: 0;\n    z-index: 50;\n    color: #f3f3f3;\n\n    font-size: calc(1.5rem + 2vw);\n    line-height: calc(2.5rem + 2vw);\n  }\n\n  blockquote {\n    grid-column: 2/4;\n    border-left: none;\n\n    &:first-of-type {\n      margin-top: 2rem;\n    }\n\n    p {\n      font-size: calc(1rem + .5vw);\n      line-height: calc(1.5rem + 1vw);\n      margin-bottom: 1rem;\n    }\n\n    .attribution {\n      font-size: calc(1rem + 0.15vw);\n      line-height: calc(1.5rem + .4vw);\n      padding-left: calc(1.5rem + 5vw);\n      margin-bottom: 0;\n    }\n  }\n\n  @media screen and (min-width: 150ch) and (min-height: 80ch){\n\n    // if we have a large enough viewport, let's make a nice spread and overlay all the text\n\n    grid-template-columns: minmax(.5rem, 2vw) minmax(min-content, 1fr) minmax(.5rem, 6vw) minmax(min-content, 1fr) minmax(.5rem, 2vw);\n    grid-template-rows: minmax(.5rem, 2vh) 25vh 50vh minmax(.5rem, 2vh);\n\n    figure {\n      grid-column: 1/6;\n      grid-row: 1/5;\n    }\n\n    h2 {\n      grid-column: 2/3;\n      grid-row: 2/3;\n    }\n\n    blockquote {\n\n      align-self: center;\n      padding: 0;\n      z-index: 50;\n      margin-bottom: 0;\n\n      &:first-of-type {\n        grid-column: 2/3;\n        grid-row: 3/4;\n      }\n\n      &:nth-of-type(2) {\n        grid-column: 4/5;\n        grid-row: 2/4;\n      }\n\n      p {\n        color: #f3f3f3;\n      }\n    }\n  }\n\n}\n\n/////////////////////////////////////////////////////////////\n\n\n#honey-i-shrunk-the-lab {\n}\n\n/////////////////////////////////////////////////////////////\n\n#microfluidics {\n}\n\n/////////////////////////////////////////////////////////////\n\n#pnipam {\n}\n\n.pnipam-formula img {\n  max-width: 20rem;\n  margin: auto;\n}\n\n.pnipam-switch-figures {\n  // Make this a little grid so we can lay out our collage\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  grid-template-rows: auto;\n\n  .caption {\n    text-align: left;\n  }\n}\n\n.pnipam-switch-figures1,\n.pnipam-switch-figures2 {\n\n  img {\n    height: 100%;\n    object-fit: cover;\n  }\n}\n\n.pnipam-switch-figures3 {\n  // Spread out the diagram to mirror the state of PNIPAM under the two photos\n  grid-column: 1/3;\n  grid-row: 2/3;\n\n  img {\n    width: 100%\n  }\n}\n\n\n/////////////////////////////////////////////////////////////\n\n#surface-functionalization {\n}\n\n#grafting-chemistry {\n}\n\n.silane-afm {\n  @include split.place(left, \"3/4\");\n  @include layout.side-by-side-figures(.5rem);\n}\n\n#contact-angle {\n}\n\n.functionalization-hydrophobic-hydrophilic {\n  @include layout.side-by-side-figures();\n}\n\n#infrared-spectroscopy {\n}\n\n\n.hydrophilic,\n.hydrophobic {\n\n  overflow: hidden; // we're zomming on the images to better see the droplets, but we don't want their footprint to increase\n\n  img {\n    height: 100%;\n    object-fit: cover;\n  }\n}\n\n.hydrophilic img {\n  object-position: 70%;\n  transform: scale(1.5);\n}\n\n.hydrophobic img {\n  object-position: 25%;\n  transform: scale(1.5);\n}\n\n\n\n/////////////////////////////////////////////////////////////\n\n#controlling-surface-properties-with-pnipam {\n}\n\n#electrokinetic-mixing,\n#electro-osmotic-flow,\n#controlling-the-electro-osmotic-flow-with-pnipam {\n}\n\n/////////////////////////////////////////////////////////////\n\n#microfluidic-chip {\n}\n\n.chip-blender {\n  @include layout.side-by-side-figures(.3rem);\n}\n\n\n/////////////////////////////////////////////////////////////\n\n#heating-elements {\n}\n\n.comsol-maillage {\n  max-width: 25rem;\n  margin: auto;\n}\n\n/////////////////////////////////////////////////////////////\n\n#catching-proteins {\n}\n\n.catching-proteins-chip {\n  @include layout.side-by-side-figures();\n}\n","@use '../settings' as *;\n@use '../common/typography';\n\n$breakpoint: 100ch;\n$column-width: 80ch;\n\n// Mixins\n\n//////////////////////////////////////////////////\n\n%new4split {\n  //  Default split layout\n  display: grid;\n  grid-template-columns: repeat(2, minmax(min-content, 1fr));\n  column-gap: calc(1.2rem + 2vw); // slightly larger than $base-unit\n  margin: auto;\n\n  // by default we stack everything as if there was no split (mobile default)\n  > * {\n    grid-column: 1/3;\n  }\n}\n\n%split {\n\n  //  Default split layout\n  $width: 65ch;\n\n  display: grid;\n  grid-template-columns:\n  minmax(.5rem, 1fr)\n  minmax(min-content, $width)\n  1.5rem\n  minmax(min-content, $width)\n  minmax(.5rem, 1fr);\n  column-gap: $base-unit;\n  margin-bottom: 3rem;\n\n  &:last-child {\n    margin-bottom: 0;\n  }\n\n  // Full-width images in small viewports\n\n  > figure,\n  .figures {\n    grid-column: 1 / 6;\n    margin-bottom: 2rem;\n\n    &:last-child {\n      margin-bottom: 0;\n    }\n\n    figcaption {\n      // The figure spans all 6 columns so the img can reach the edges of the viewport, but the caption isn't a child element of the grid so we can't confine it to columns 2-5, so we need to re-add the side margins here\n      margin-left: .5rem;\n      margin-right: .5rem;\n      // remove bottom margin here since we added it to the parent element\n      margin-bottom: 0;\n    }\n  }\n\n  h3,\n  h4,\n  p,\n  dl,\n  aside,\n  .expert {\n    grid-column: 2 / 5;\n  }\n\n  .footnote p {\n    // add this here because specificity of p otherwise overrides the footnotes\n    grid-column: 2/3;\n  }\n\n  h3 {\n    margin-bottom: 1.5rem;\n    text-align: center;\n  }\n\n}\n\n//////////////////////////////////////////////////\n\n@mixin new4columns($left-width: 65ch, $right-width: 65ch) {\n\n  // to be used in conjunction with @extend %split\n  // if we want customizable widths\n\n  grid-template-columns:\n  minmax(min-content, $left-width)\n  minmax(min-content, $right-width)\n}\n\n@mixin split($left-width: 65ch, $right-width: 65ch) {\n\n  // same as above but with customizable widths\n  @extend %split;\n\n  grid-template-columns:\n  minmax(.5rem, 1fr)\n  minmax(min-content, $left-width)\n  1.5rem\n  minmax(min-content, $right-width)\n  minmax(.5rem, 1fr);\n}\n\n//////////////////////////////////////////////////\n\n%new4text-pics { // formerly $image-side: \"right\"\n\n  // Rules for splitting content into a text column and a pics column. To be embedded in a split layout, not for direct use.\n\n  @media screen and (min-width: $breakpoint) {\n    > figure,\n    .figures {\n      grid-column: 2/3;\n    }\n\n    h3,\n    h4,\n    p,\n    dl,\n    .footnote,\n    .expert {\n      grid-column: 1/2;\n      // .expert is here since by default it's going in the main column.\n      // To override, use the split.new4place() mixin, but make sure the rule is specific enough to override this one\n    }\n\n    .footnote p {\n      // add this here because specificity of p otherwise overrides the footnotes\n      grid-column: 2/3;\n    }\n  }\n}\n\n\n%new4pics-text { // formerly: text-pics(left)\n\n  // Same but flipped\n\n  @media screen and (min-width: $breakpoint) {\n    > figure,\n    .figures {\n      grid-column: 1/2;\n    }\n\n    h3,\n    h4,\n    p,\n    dl,\n    .footnote,\n    .expert {\n      grid-column: 2/3;\n    }\n\n    .footnote p {\n      grid-column: 2/3;\n    }\n  }\n}\n\n// Mixins for partial layouts in a split context\n// Used to build more specialized split layouts\n\n@mixin txt-pics-columns-in-split($image-side, $image-row-span, $pics-width: 65ch, $text-width: 65ch, $image-row-start: 1) {\n\n  // Rules for splitting content into a text column and a pics column. To be embedded in a split layout, not for direct use. Made as a mixin so it can be included in both regular and with-cover split layouts.\n\n  @media screen and (min-width: $breakpoint) {\n    > figure,\n    .figures {\n      grid-column: if($image-side == \"left\", #{2/3}, #{-2/-3});\n      grid-row: #{$image-row-start} / #{$image-row-span + $image-row-start};\n\n      figcaption, .caption {\n        // Remove the margins when we're no longer in full-width picture\n        margin-left: 0;\n        margin-right: 0;\n      }\n    }\n\n    h3,\n    h4,\n    p,\n    dl,\n    .footnote,\n    .expert {\n      grid-column: if($image-side == \"left\", #{4/5}, #{-4/-5});\n      // .expert is here since by default it's going in the main column.\n      // To override, use the place-split-layout-element mixin, but make sure the rule is specific enough to override this one\n    }\n\n    .footnote p {\n      // add this here because specificity of p otherwise overrides the footnotes\n      grid-column: 2/3;\n    }\n  }\n\n}\n\n%hero-in-split {\n  // this used to be a mixin where creating different styles whether the hero image was // dark or light. Now we assume it's dark (which enables us to simply extend this style verbatim) and simply make tiny adjustments if it's light.\n  grid-template-rows:\n  minmax(.5rem, 2vh)\n  35vh\n  35vh\n  minmax(.5rem, 2vh)\n  2rem\n  auto;\n\n  h2 {\n    grid-column: 2/5;\n    grid-row: 2/4;\n    align-self: center;\n    z-index: 50;\n    color: #f3f3f3;\n  }\n\n  > figure:first-of-type {\n\n    // This is the first picture in the section, i.e. the one we want to use as graphic spread.\n\n    grid-column: 1/6;\n    grid-row: 1/5;\n    z-index: 25;\n\n    img {\n      height: 100%;\n      object-fit: cover;\n      // If we have a dark background with bright text, make the background darker by reducing brightness\n      filter: brightness(60%);\n    }\n\n    figcaption {\n      // The figure spans all 6 columns so the img can reach the edges of the viewport, but the caption isn't a child element of the grid so we can't confine it to columns 2-5, so we need to re-add the side margins here\n      margin-left: .5rem;\n      margin-right: .5rem;\n    }\n\n  }\n\n  &:after {\n\n    // Reserve the fifth row with an invisible character (immediately underneath the graphic spread) to leave space for the caption and to bump the paragraph text to the next available row.\n\n    content: ' ';\n    grid-column: 1/6;\n    grid-row: 5/6;\n  }\n\n  @media screen and (min-width: $breakpoint) {\n\n    h2 {\n      grid-column: 2/5;\n      grid-row: 2/3;\n      align-self: end;\n    }\n\n    > p:first-of-type {\n      grid-column: 2/5;\n      grid-row: 3/4;\n      align-self: center;\n      z-index: 50;\n      @include typography.larger-font-size();\n      color: #f3f3f3;\n    }\n\n  }\n}\n\n\n\n//////////////////////////////////////////////////\n\n@mixin txt-pics($image-side: right, $image-row-span: 2, $pics-width: 65ch, $text-width: 65ch) {\n\n  // A split layout with text in one column and images in the other\n\n  @if $image-side == \"left\" {\n    @include split($pics-width, $text-width)\n  } @else {\n    @include split($text-width, $pics-width)\n  };\n\n  @include txt-pics-columns-in-split($image-side, $image-row-span);\n\n}\n\n//////////////////////////////////////////////////\n\n\n%new4hero-section {\n\n  // A graphic spread for h2 title and one-liner <p>.\n\n  // this used to be a mixin where creating different styles whether the hero image was // dark or light. Now we assume it's dark (which enables us to simply extend this style verbatim) and simply make tiny adjustments if it's light.\n\n  display: grid;\n  grid-template-columns: 1fr;\n  grid-template-rows:\n  35vh\n  35vh\n  3rem\n  auto;\n\n  > * {\n    grid-column: 1/2;\n  }\n\n  // on narrow viewports, only the h2 title is in the graphic spread, so we center it.\n\n  h2 {\n    grid-row: 1/3;\n    align-self: center;\n    z-index: 50;\n    color: #f3f3f3;\n    @extend %hero-h2 !optional;\n    text-shadow: 0 1rem 1.5rem #000, 0 0 1.5rem #000, 1rem 1.5rem 1.5rem #000;\n  }\n\n  > figure:first-of-type {\n\n    // This is the first picture in the section, i.e. the one we want to use as graphic spread.\n\n    grid-row: 1/3;\n    z-index: 25;\n    margin: 0;\n\n    img {\n      height: 100%;\n      object-fit: cover;\n      margin: 0;\n      // If we have a dark background with bright text, make the background darker by reducing brightness\n      filter: brightness(60%);\n    }\n  }\n\n  &::before {\n    content: '';\n    grid-row: 1/3;\n    grid-column: 1/2;\n    box-shadow: 0 2rem 1.5rem rgba(0,0,0,.7) inset, 0 -2rem 1.5rem rgba(0,0,0,.7) inset;\n    z-index: 75;\n  }\n\n  &:after {\n\n    // Reserve the fifth row with an invisible character (immediately underneath the graphic spread) to leave space for the caption and to bump the paragraph text to the next available row.\n\n    content: ' ';\n    grid-column: 1/3;\n    grid-row: 3/4;\n  }\n\n  @media screen and (min-width: $breakpoint) {\n\n    // on larger viewports, we pull up the h2 title to make space for the first paragraph that's also pulled into the graphic spread.\n\n    h2 {\n      grid-row: 1/2;\n      align-self: end;\n    }\n\n    > p:first-of-type {\n      grid-row: 2/3;\n      align-self: center;\n      z-index: 50;\n      @include typography.larger-font-size();\n      color: #f3f3f3;\n      text-shadow: 0.1rem 0.1rem 1.5rem black, -0.1rem -0.1rem 1.5rem black;\n      padding-left: $base-unit;\n      padding-right: $base-unit;\n      margin: auto;\n      max-width: $column-width;\n    }\n\n    figcaption {\n      // The figure spans both columns so the img can reach the edges of the viewport, but the caption should have some margins\n      padding-left: $base-unit;\n      padding-right: $base-unit;\n    }\n  }\n}\n\n@mixin hero-darken($brightness: 35%) {\n  // make the hero image a little darker to ensure legibility\n\n  > figure:first-of-type img{\n    filter: brightness($brightness);\n  }\n}\n\n%new4hero-section-with-split-layout {\n\n  // Like %new4hero-section but with a split layout for the rest of the section after the graphic spread. For use when we want a split layout for a section that only has a h2 title and paragraphs with no h3s.\n\n  @extend %new4split;\n  @extend %new4hero-section;\n\n  > * {\n    grid-column: 1/3;\n  }\n}\n\n\n%split-hero {\n\n  // Like split-layout but with a graphic spread first for h2 title and one-liner <p>.\n\n  @extend %split;\n  @extend %hero-in-split;\n\n  > * {\n    @extend %spread;\n  }\n}\n\n//////////////////////////////////////////////////\n\n\n@mixin txt-pics-hero($image-side: right, $image-row-span:4, $background: dark, $text-width: 65ch, $pics-width: 65ch) {\n\n  // A split-layout with both a hero section-title and text/pics columns\n\n  @if $image-side == \"left\" {\n    @include split($pics-width, $text-width)\n  } @else {\n    @include split($text-width, $pics-width)\n  };\n\n  @extend %split-hero;\n  @include txt-pics-columns-in-split($image-side, $image-row-span, $image-row-start: 6);\n\n}\n\n//////////////////////////////////////////////////\n\n\n@mixin cover($image-side, $image-row-span, $image-position) {\n\n  // Like split-layout but here the image has an object-fit: cover\n\n  @include txt-pics(\n  $image-side,\n  $image-row-span,\n  $pics-width: 65ch,\n  $text-width: 65ch,\n  );\n\n  figure {\n\n    height: 50vh;\n\n    img {\n      height: 100%;\n      object-fit: cover;\n      object-position: $image-position;\n    }\n  }\n\n  @media screen and (min-width: $breakpoint) {\n    figure {\n      height: 100%;\n    }\n\n    p:last-child,\n    dl:last-child { // for proper alignment with bottom of image\n      margin-bottom: 0;\n    }\n  }\n\n}\n\n//////////////////////////////////////////////////\n\n// Mixins to place elements in a split layout\n\n\n@mixin new4place($side, $grid-row: \"auto\") {\n\n  // A utility to place split-layout figures in their proper row and columns if the built-in rules aren't enough.\n\n  grid-column: 1/3;\n\n  @media screen and (min-width: $breakpoint) {\n    grid-column: if($side == \"left\", #{1/2}, #{-1/-2});\n    grid-row: #{$grid-row};\n  }\n\n}\n\n@mixin place($side, $grid-row: \"auto\") {\n\n  // A utility to place split-layout figures in their proper row and columns if the built-in rules aren't enough.\n\n  grid-column: 1/6;\n\n  @media screen and (min-width: $breakpoint) {\n    grid-column: if($side == \"left\", #{2/3}, #{-2/-3});\n    grid-row: #{$grid-row};\n  }\n\n}\n\n%new4spread {\n  // A utility to spread split-layout figures across both columns of a split layout.\n  grid-column: 1/3;\n  grid-row: auto;\n}\n\n\n%spread {\n  // A utility to spread split-layout figures across both columns of a split layout.\n  grid-column: 1/6;\n\n  @media screen and (min-width: $breakpoint) {\n    grid-column: 2/5;\n    grid-row: auto;\n  }\n}\n\n@mixin new4spread($grid-row: auto) {\n  // Same as above but configurable\n  grid-column: 1/3;\n  grid-row: #{$grid-row};\n}\n\n@mixin spread($grid-row: auto) {\n  // Same as above but configurable\n  grid-column: 1/6;\n\n  @media screen and (min-width: $breakpoint) {\n    grid-column: 2/5;\n    grid-row: #{$grid-row};\n  }\n\n}\n\n/////////////////////////////////////////////////////////////\n\n// Adjustments from defaults:\n// Keep at the end so they override the defaults above when they're extended elsewhere\n\n%hero-in-split-light {\n  // adjustments where the hero image is light\n\n  h2 {\n    color: #222;\n    text-shadow: 0.1rem 0.1rem 1.5rem white, -0.1rem -0.1rem 1.5rem white;\n  }\n\n  > figure:first-of-type img {\n    // If we have a light background with dark text, make the background brighter by increasing transparency.\n    filter: opacity(20%);\n  }\n\n  &::before {\n    box-shadow: 0 1rem 2rem -1rem rgba(0,0,0,.6) inset,0 -1rem 2rem -1rem rgba(0,0,0,.6) inset;\n  }\n\n  @media screen and (min-width: $breakpoint) {\n    > p:first-of-type {\n      color: #222;\n      text-shadow: 0.1rem 0.1rem 1.5rem white, -0.1rem -0.1rem 1.5rem white;\n    }\n  }\n}\n"],"file":"../../custom/page_phd.css"}